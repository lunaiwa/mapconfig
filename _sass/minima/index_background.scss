
@mixin sp-layout {
    @media screen and (max-width: 1750px) {
      @content;
    }
}

.card {
    h1 {
        font-weight: bold;
    }
    margin-top: 10px;
    margin-bottom: 10px;
    padding: 10px;
    border: 1px #fff solid;
    color: #fff;
    text-align: center;
    margin: auto;
    width: 30vw;
    background-color: rgba(255, 255, 255, 0.2); /* Adjust opacity as needed */
    backdrop-filter: blur(10px); /* Adjust blur amount as needed */
    border-radius: 10px; /* Add border radius for rounded corners */
    button {
        background-color: rgba(255, 255, 255, 0.2); /* Adjust opacity as needed */
        padding: 5px;
        border: 1px #fff solid;
        transition: 0.3s ease-in-out all;
    }
    button:hover {
        background-color: rgba(255, 255, 255, 0.2); /* Adjust opacity as needed */
        background-color: rgba(255, 255, 255, 0.5); /* Adjust opacity as needed */
        padding: 5px;
        border: 1px #fff solid;
        transition: 0.3s ease-in-out all;
    }
}

.card:hover {
    background-color: rgba(255, 255, 255, 0.3);
    transition: 0.3s ease-in-out all;
}

body {
    color: #fff !important;
    min-height: 100vh;
    background: radial-gradient(ellipse at bottom, #162941 0%, #0c0d13 100%);
    overflow: hidden;
}
  
@function random_range($min, $max) {
    $rand: random();
    $random_range: $min + floor($rand * (($max - $min) + 1));
    @return $random_range;
}
  
.stars {
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: -440px;
    left: 395px;
    width: 100%;
    height: 120%;
    transform: rotate(-45deg);
    z-index: -10;
}
  
.star {
    $star-count: 50;
    --star-color: #6dd7fd;
    --star-tail-length: 6em;
    --star-tail-height: 2px;
    --star-width: calc(var(--star-tail-length) / 6);
    --fall-duration: 26s;
    --tail-fade-duration: var(--fall-duration);
  
    position: absolute;
    top: var(--top-offset);
    left: 0;
    width: var(--star-tail-length);
    height: var(--star-tail-height);
    color: var(--star-color);
    background: linear-gradient(45deg, currentColor, transparent);
    border-radius: 50%;
    filter: drop-shadow(0 0 6px currentColor);
    transform: translate3d(104em, 0, 0);
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;
    
    @include sp-layout {
      // For mobile performance, tail-fade animation will be removed QAQ
      animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
    }
  
    @for $i from 1 through $star-count {
      &:nth-child(#{$i}) {
        --star-tail-length: #{random_range(500em, 750em) / 100};
        --top-offset: #{random_range(0vh, 10000vh) / 100};
        --fall-duration: #{random_range(6000, 10000s) / 1000};
        --fall-delay: #{random_range(0, 8000s) / 1000};
      }
    }
  
    &::before, &::after {
      position: absolute;
      content: '';
      top: 0;
      left: calc(var(--star-width) / -2);
      width: var(--star-width);
      height: 100%;
      background: linear-gradient(45deg, transparent, currentColor, transparent);
      border-radius: inherit;
      animation: blink 12s linear infinite;
    }
  
    &::before {
      transform: rotate(45deg);
    }
  
    &::after {
      transform: rotate(-45deg);
    }
}
  
@keyframes fall {
    to {
      transform: translate3d(-30em, 0, 0);
    }
}
  
@keyframes tail-fade {
    0%, 50% {
      width: var(--star-tail-length);
      opacity: 1;
    }
  
    70%, 80% {
      width: 0;
      opacity: 0.4;
    }
  
    100% {
      width: 0;
      opacity: 0;
    }
}
  
  @keyframes blink {
    50% {
      opacity: 0.6;
    }
}